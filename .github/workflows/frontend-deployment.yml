name: Frontend Deployment
on:
  push:
    branches:
      - team2-geeta

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js with npm cache
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build project
        working-directory: frontend
        run: npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.CYPRESS_API_URL }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:      ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:             us-east-1

      - name: Deploy to S3 with Cache-Control headers
        run: |
          aws s3 sync frontend/build s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public, max-age=31536000, immutable" \
            --exclude "index.html"

          aws s3 cp frontend/build/index.html s3://${{ secrets.S3_BUCKET_NAME }}/index.html \
            --cache-control "no-cache, max-age=0, must-revalidate"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/index.html"

      - name: Print Website URL
        run: |
          echo "Website deployed to: https://${{ secrets.CLOUDFRONT_DOMAIN }}"

      # Optional: Save build artifact
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: frontend-build
      #     path: frontend/build
