name: Frontend Deployment

on:
  push:
    branches:
      - team6-yagya

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build application
      working-directory: ./frontend
      run: npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

    - name: Deploy to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
      run: aws s3 sync frontend/build s3://${{ secrets.S3_BUCKET_NAME }}/ --delete

    - name: Invalidate CloudFront
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

    - name: Wait for deployment to be ready
      env:
        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
        BACKEND_API_URL: ${{ secrets.BACKEND_API_URL }}
      run: |
        echo "⏳ Waiting for CloudFront invalidation to complete..."
        echo "🔍 Testing frontend availability..."
        for i in {1..10}; do
          if curl -s -f "${FRONTEND_URL}" > /dev/null; then
            echo "✅ Frontend is accessible!"
            break
          fi
          echo "⏳ Attempt $i/10 - waiting 30 seconds..."
          sleep 30
        done
        
        echo "🔍 Checking backend API availability..."
        for i in {1..15}; do
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "${BACKEND_API_URL}/health" || echo "000")
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Backend API is healthy! (HTTP $HTTP_CODE)"
            break
          else
            echo "⏳ Backend not ready (HTTP $HTTP_CODE). Attempt $i/15 - waiting 20 seconds..."
            sleep 20
          fi
        done

    - name: Install Cypress dependencies
      working-directory: ./e2e-tests
      run: npm ci

    - name: Run Cypress E2E Tests
      working-directory: ./e2e-tests
      run: npm run cy:run
      env:
        CYPRESS_BASE_URL: ${{ secrets.FRONTEND_URL }}
        CYPRESS_API_URL: ${{ secrets.BACKEND_API_URL }}

    - name: Upload Cypress Screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-screenshots
        path: e2e-tests/cypress/screenshots

    - name: Upload Cypress Videos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-videos
        path: e2e-tests/cypress/videos

    - name: Send Slack notification on success
      if: success()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"✅ Frontend Deployment & E2E Tests Successful! 🎉\n📍 Branch: team6-yagya\n🌐 Frontend: ${{ secrets.FRONTEND_URL }}\n🔗 Backend: ${{ secrets.BACKEND_API_URL }}\n✨ New Feature: User Statistics Dashboard added!"}' \
        ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send Slack notification on failure
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"❌ Frontend Deployment or E2E Tests Failed!\n📍 Branch: team6-yagya\n🔍 Check: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n📸 Screenshots and videos uploaded to artifacts"}' \
        ${{ secrets.SLACK_WEBHOOK_URL }}