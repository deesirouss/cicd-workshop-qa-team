name: Frontend Build with Manual Approval and Tests

on:
  push:
    branches:
      - team6-yagya
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '20'

jobs:
  # Job 1: Build the application
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          echo "Installing frontend dependencies..."
          npm ci

      - name: Verify react-scripts installation
        working-directory: ./frontend
        run: |
          echo "Checking react-scripts installation..."
          npm list react-scripts || echo "react-scripts not found in dependencies"

      - name: Build React application
        working-directory: ./frontend
        run: |
          echo "Building React application..."
          npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

      - name: Verify build output
        working-directory: ./frontend
        run: |
          echo "Verifying build output..."
          ls -la build/
          echo "Build size:"
          du -sh build/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/
          retention-days: 30

      - name: Build Summary
        run: |
          echo "## Frontend Build Successful! 🚀" >> $GITHUB_STEP_SUMMARY
          echo "- Dependencies installed" >> $GITHUB_STEP_SUMMARY
          echo "- React app built successfully" >> $GITHUB_STEP_SUMMARY
          echo "- Build artifacts uploaded" >> $GITHUB_STEP_SUMMARY
          echo "- **Waiting for manual approval to proceed with testing...**" >> $GITHUB_STEP_SUMMARY

  # Job 2: Manual Approval Gateway
  approval:
    name: Manual Approval Required
    runs-on: ubuntu-latest
    needs: build
    environment: 
      name: manual_approval
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    
    steps:
      - name: 🚦 Waiting for approval
        run: |
          echo "🚦 Manual approval required to proceed with testing and deployment"
          echo "👀 Review the build artifacts and approve to continue"
          echo "📍 Build completed successfully, ready for testing phase"

  # Job 3: Run Tests (only after approval)
  test:
    name: 🧪 Run Tests After Approval
    runs-on: ubuntu-latest
    needs: [build, approval]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

      - name: 📦 Install test dependencies
        working-directory: ./frontend
        run: |
          echo "📦 Installing test dependencies..."
          npm ci

      - name: 🧪 Run Unit Tests
        working-directory: ./frontend
        run: |
          echo "🧪 Running unit tests..."
          npm run test:unit

      - name: 🔗 Run Integration Tests
        working-directory: ./frontend
        run: |
          echo "🔗 Running integration tests..."
          npm run test:integration

      - name: 📊 Generate Test Report
        working-directory: ./frontend
        run: |
          echo "📊 Test Summary:" > test-summary.txt
          echo "================" >> test-summary.txt
          echo "✅ Unit Tests: Passed" >> test-summary.txt
          echo "✅ Integration Tests: Passed" >> test-summary.txt
          echo "📅 Completed: $(date)" >> test-summary.txt
          cat test-summary.txt

      - name: 📤 Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            frontend/coverage/
            frontend/test-summary.txt
          retention-days: 30

      - name: ✅ Test Summary
        run: |
          echo "## 🧪 Tests Completed Successfully! ✅" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Unit tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Integration tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Test coverage generated" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 **Ready for deployment!**" >> $GITHUB_STEP_SUMMARY

  # Job 4: Deploy (only after tests pass)
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, approval, test]
    environment: 
      name: production
      url: https://your-frontend-url.example.com
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

      - name: ☁️ Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          echo "☁️ Deploying to S3 bucket ${{ secrets.S3_BUCKET_NAME }}"
          aws s3 sync frontend/build/ s3://${{ secrets.S3_BUCKET_NAME }}/ --delete

      - name: 🔄 Invalidate CloudFront
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          echo "🔄 Invalidating CloudFront distribution ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: 🎉 Deployment Summary
        run: |
          echo "## 🎉 Deployment Successful! 🚀" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Deployed to S3: ${{ secrets.S3_BUCKET_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ CloudFront invalidated" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Live URL: ${{ secrets.FRONTEND_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "- 📅 Deployed: $(date)" >> $GITHUB_STEP_SUMMARY
