name: Cypress E2E Tests

on:
  workflow_run:
    workflows:
      - Frontend Deployment
    types:
      - completed
  workflow_dispatch:

jobs:
  cypress-e2e:
    name: Run Cypress E2E Tests
    runs-on: ubuntu-latest

    env:
      CYPRESS_BASE_URL: ${{ vars.CYPRESS_BASE_URL }}
      CYPRESS_API_URL: ${{ vars.CYPRESS_API_URL }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./e2e-tests
        run: npm install

      - name: Install Cypress binary
        working-directory: ./e2e-tests
        run: npx cypress install

      - name: Run Cypress tests with Mochawesome reporter
        working-directory: ./e2e-tests
        run: |
          npx cypress run \
            --config baseUrl=$CYPRESS_BASE_URL \
            --reporter mochawesome \
            --reporter-options reportDir=cypress/reports,overwrite=false,html=true,json=true

      - name: Upload Mochawesome HTML report to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws s3 cp ./e2e-tests/cypress/reports/mochawesome.html s3://team6-cicdws-bucket/team6-sufi/reports/mochawesome.html --acl public-read

      - name: Parse Mochawesome JSON and send Slack notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          PASSED=$(jq '.stats.passes' ./e2e-tests/cypress/reports/mochawesome.json)
          FAILED=$(jq '.stats.failures' ./e2e-tests/cypress/reports/mochawesome.json)
          TOTAL=$(jq '.stats.tests' ./e2e-tests/cypress/reports/mochawesome.json)
          REPORT_URL="https://team6-cicdws-bucket.s3.amazonaws.com/team6-sufi/reports/mochawesome.html"

          TEXT="ðŸ§ª *Test Report*\nâ€¢ *Total:* $TOTAL\nâ€¢ *Passed:* $PASSED\nâ€¢ *Failed:* $FAILED\nFull report: <$REPORT_URL|View detailed report>"

          PAYLOAD=$(jq -n --arg text "$TEXT" '{text: $text}')
          curl -sSL -X POST -H 'Content-type: application/json' -d "$PAYLOAD" "$SLACK_WEBHOOK_URL"
